{
  "designerVersion": "1.2.9",
  "favorite": false,
  "id": "customLivingApplicationMenu",
  "name": "livingApplicationMenu",
  "lastUpdate": 1462882655095,
  "template": "<div class=\"navbar navbar-inverse\" role=\"navigation\">\n    <div class=\"container\">\n        <div class=\"container\">\n            <div class=\"navbar-header\">\n                <a class=\"navbar-brand\" href=\"..\">{{ctrl.applicationName}}</a>\n                <button type=\"button\" ng-init=\"navCollapsed = true\" ng-click=\"navCollapsed = !navCollapsed\" class=\"navbar-toggle\">\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n            </div>\n            <div collapse=\"navCollapsed\" class=\"collapse navbar-responsive-collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li ng-class=\"{active:ctrl.pageToken===menu.applicationPageId.token}\" ng-repeat=\"menu in ctrl.filterChildren(-1)\" dropdown>\n                        <a ng-if=\"!ctrl.isParentMenu(menu)\" ng-href=\"../{{menu.applicationPageId.token}}/\" >{{menu.displayName}}</a>\n                        <a ng-if=\"ctrl.isParentMenu(menu)\" dropdown-toggle>{{menu.displayName}}<span class=\"caret\"></span></a>\n                        <ul ng-if=\"ctrl.isParentMenu(menu)\" class=\"dropdown-menu\">\n                            <li ng-repeat=\"childMenu in ctrl.filterChildren(menu.id)\">\n                                <a ng-href=\"../{{childMenu.applicationPageId.token}}/\">{{childMenu.displayName}}</a>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>",
  "controller": "function WidgetlivingApplicationMenuController($scope, $http, $window) {\n    var ctrl = this;\n    var pathArray = $window.location.pathname.split( '/' );\n    ctrl.applicationToken =  pathArray[pathArray.length-3]; \n    ctrl.pageToken =  pathArray[pathArray.length-2];\n\n    function getApplication() {\n        return $http.get('../API/living/application/?c=1&f=token%3D'+ctrl.applicationToken);\n    }\n    \n    this.filterChildren = function (parentId) {\n        return (ctrl.applicationMenuList||[]).filter(function(menu){\n            return menu.parentMenuId === '' + parentId;\n        });\n        \n    }\n   \n    function getApplicationMenuList(applicationId) {\n        \n        $http.get('../API/living/application-menu/?c=100&f=applicationId%3D'+applicationId+'&d=applicationPageId&o=menuIndex+ASC')\n            .success(function(data) { \n                ctrl.applicationMenuList = data;\n            });\n        return applicationId;\n    }\n\n    function setTargetedUrl() {\n        $scope.properties.targetUrl = \"../../../portal/resource/app/\"+ctrl.applicationToken+\"/\"+ ctrl.pageToken+\"/content/\"+ $window.location.search;\n    }\n\n    ctrl.isParentMenu= function(menu) {\n        return menu.parentMenuId==-1 && menu.applicationPageId==-1;\n    };\n    \n    getApplication().then(function(response) {\n        var application = response.data[0];\n        ctrl.applicationName = application.displayName;\n        $window.document.title = application.displayName;\n        return application.id;\n    }).then(getApplicationMenuList).then(setTargetedUrl);\n    \n}",
  "description": "This is an example of living application menu.",
  "custom": true,
  "properties": [
    {
      "label": "URL targeted by the menu",
      "name": "targetUrl",
      "type": "text",
      "bond": "variable"
    }
  ],
  "assets": [],
  "requiredModules": ["ui.bootstrap"],
  "authRules": [
    "GET|living/application-menu",
    "GET|living/application-page",
    "GET|living/application"
  ],
  "type": "widget"
}
